{"remainingRequest":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/components/elements/fields/block/ScriptBlock.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/components/elements/fields/block/ScriptBlock.vue","mtime":1570790569477},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1570790663275},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/babel-loader/lib/index.js","mtime":1570790663215},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1570790663275},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/vue-loader/lib/index.js","mtime":1570790665183}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport HeadBlock from '@/components/elements/fields/block/HeadBlock.vue';\n// import HeadContent from '@/components/Fields/Additional/HeadContent.vue'\n// import InputLangComponent from '@/components/Fields/InputLocaleComponent.vue'\nimport TextareaComponent from '@/components/elements/fields/TextareaComponent.vue'\n\n// import MarkdownLocaleComponent from '@/components/Fields/Additional/MarkdownLocaleComponent.vue'\nexport default {\n    name: 'ScriptBlock',\n    componentName: 'ScriptBlock',\n    components: {\n        HeadBlock, \n        TextareaComponent\n    },\n    props: {\n        value: {\n            type: Object,\n            default: null\n        },\n        indexComponent: {\n            type: Number,\n            required: true\n        }\n    },\n    data() {\n        return {\n            curValue: '',\n            statuses: [ 'DELETE', 'START', 'NEW', 'UPDATE', 'NOT_CHANGED' ]\n        }\n    },\n    watch: {\n        value: {\n            handler(newValue, oldValue) {\n                if (!!newValue && newValue.hasOwnProperty(\"text\")) {\n                    this.curValue = newValue.text;\n                }\n            },\n            immediate: true\n        }\n    },\n    computed: {\n        getStatus() {\n            if (!!this.value &&\n                this.value.hasOwnProperty('status') &&\n                this.statuses.indexOf(this.value.status) !== -1) {\n                return this.value.status;\n            }\n            return null;\n        }\n    },\n    methods: {\n        inputHandle(value) {\n            let tmp = this.$panel.clone(this.value);\n            tmp.text = value;\n            if (tmp.status !== 'NEW') {\n                tmp.status = 'UPDATE';\n            }\n            this.$emit('input', tmp);\n        },\n        changeStatusHandle(status) {\n            let tmp = this.$panel.clone(this.value);\n            tmp.status = status;\n            this.$emit('input', tmp);\n        }\n    }\n}\n",{"version":3,"sources":["ScriptBlock.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ScriptBlock.vue","sourceRoot":"src/components/elements/fields/block","sourcesContent":["<template lang=\"pug\">\ndiv.script-block(v-if=\"!!value\")\n    head-block.script-block__header(\n        :indexComponent=\"indexComponent\"\n        @onDelete=\"$emit('onRemove')\"\n        @onStatus=\"changeStatusHandle\"\n        :status=\"getStatus\"\n    )\n    div.script-block__area\n        textarea-component(\n            :value=\"curValue\"\n            :rows=\"3\"\n            placeholder=\"Script text ...\"\n            @input=\"inputHandle\"\n        )\n    //- //textarea-lang-component(\n    //-     v-model=\"value.text\"\n    //-     @input=\"edit('text', $event)\"\n    //-     :options=\"{'max_length': 1000, 'autosize_': true, 'crop': false }\"\n    //- //)\n    //- markdown-locale-component.mklc(\n    //-     v-model=\"value.text\"\n    //-     @input=\"edit('text', $event)\"\n    //-     :options=\"{'max_length': 1000, 'crop': false, 'disabled': disabled}\"\n    //-     :index=\"index\"\n    //- )\n</template>\n\n<script>\nimport HeadBlock from '@/components/elements/fields/block/HeadBlock.vue';\n// import HeadContent from '@/components/Fields/Additional/HeadContent.vue'\n// import InputLangComponent from '@/components/Fields/InputLocaleComponent.vue'\nimport TextareaComponent from '@/components/elements/fields/TextareaComponent.vue'\n\n// import MarkdownLocaleComponent from '@/components/Fields/Additional/MarkdownLocaleComponent.vue'\nexport default {\n    name: 'ScriptBlock',\n    componentName: 'ScriptBlock',\n    components: {\n        HeadBlock, \n        TextareaComponent\n    },\n    props: {\n        value: {\n            type: Object,\n            default: null\n        },\n        indexComponent: {\n            type: Number,\n            required: true\n        }\n    },\n    data() {\n        return {\n            curValue: '',\n            statuses: [ 'DELETE', 'START', 'NEW', 'UPDATE', 'NOT_CHANGED' ]\n        }\n    },\n    watch: {\n        value: {\n            handler(newValue, oldValue) {\n                if (!!newValue && newValue.hasOwnProperty(\"text\")) {\n                    this.curValue = newValue.text;\n                }\n            },\n            immediate: true\n        }\n    },\n    computed: {\n        getStatus() {\n            if (!!this.value &&\n                this.value.hasOwnProperty('status') &&\n                this.statuses.indexOf(this.value.status) !== -1) {\n                return this.value.status;\n            }\n            return null;\n        }\n    },\n    methods: {\n        inputHandle(value) {\n            let tmp = this.$panel.clone(this.value);\n            tmp.text = value;\n            if (tmp.status !== 'NEW') {\n                tmp.status = 'UPDATE';\n            }\n            this.$emit('input', tmp);\n        },\n        changeStatusHandle(status) {\n            let tmp = this.$panel.clone(this.value);\n            tmp.status = status;\n            this.$emit('input', tmp);\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\">\n.script-block {\n    background-color: $white;\n    box-sizing: border-box;\n    border-bottom: 1px solid $cyan-20;\n    &__area {\n        padding: 20px;\n        width: 100%;\n        box-sizing: border-box;\n    }\n    &:last-child {\n        border-bottom: none;\n    }\n}\n// @import \"@/assets/styles/variables.sass\"\n// .script-block\n//     width: 100%\n//     position: relative\n//     .hc\n//         margin-bottom: 20px\n//     .mklc\n        \n</style>"]}]}