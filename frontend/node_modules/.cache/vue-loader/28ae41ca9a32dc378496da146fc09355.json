{"remainingRequest":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/views/Scripts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/views/Scripts.vue","mtime":1570712642289},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TitlePage from '@/components/titles/TitlePage.vue';\nimport BlocksComponent from '@/components/elements/fields/BlocksComponent.vue';\n\nimport ScriptsPanel from '@/components/controlPanels/ScriptsPanel.vue';\n\nexport default {\n    name: 'PageScripts',\n    componentName: 'PageScripts',\n    components: {\n        TitlePage,\n        BlocksComponent,\n        ScriptsPanel\n    },\n    data() {\n        return {\n            optionsDraggable: {\n                handle: '.head-block__handlebar',\n                draggable: '.script-block',\n            },\n            isShowData: false,\n            originalMaterial: null,\n            material: {\n                blocks: []\n            }\n        };\n    },\n    computed: {\n        getTitleValue() {\n            return {\n                titleText: \"Скрипты для тестирования\",\n                titleInfo: \"(OS) Ubuntu 18.04.3 LTS\"\n            };\n        },\n        needSave() {\n            return !this.$panel.isEqual(this.material, this.originalMaterial);\n        }\n    },\n    created() {\n        this.fetchData();\n    },\n    methods: {\n        handleInput(key, value) {\n            this.material[key] = value;\n        },\n        handleEmitControl() {\n            console.log(\"[Scripts.vue]: handleEmitControl: \");\n            let data = this.setPositions(this.material.blocks);\n            data.map(block => {\n                if (block.status === 'NOT_CHANGED') {\n                    block.status = 'UPDATE';\n                }\n                return block;\n            });\n            console.log(\"POST DATA: \", data);\n            this.putScripts(data);\n        },\n        putScripts(putData) {\n            console.log(\"[Scripts.vue]: putScripts: \", putData);\n            this.$store.state.axios.put('/scripts', putData).then(response => {\n                console.log('[Scripts.vue]: putScripts(response): ', response);\n                if (response.status === 200) {\n                    this.$store.commit('addNotification', { \n                        text: `${ this.$t('$notifications.update_success') }`, \n                        color: 'green' \n                    });\n                    this.fetchData();\n                }\n            }).catch(error => {\n                console.log('[Scripts.vue]: putScripts(error): ', error);\n            })\n        },\n        setPositions(values) {\n            let i = 0;\n            let array = values.map(block => {\n                block.position = i++;\n                return block;\n            })\n            return array;\n        },\n        getSortPosition(values) {\n            let result = this.$panel.clone(values);\n            result.sort((a, b) => {\n                if (a.position < b.position) return -1;\n                if (a.position > b.position) return 1;\n                return 0;\n            });\n            return result;\n        },\n        fetchData() {\n            this.$store.state.axios.get('/scripts').then(response => {\n                console.log(\"[Scripts.vue]: fetchData(response): \", response);\n                if (response.status === 200){\n                    let material = { blocks: this.getSortPosition(response.data) };\n                    material.blocks.map(block => {\n                        block.status = 'NOT_CHANGED';\n                        return block;\n                    });\n                    this.material = material;\n                    this.originalMaterial = this.$panel.clone(this.material);\n                    this.isShowData = true;\n                }\n            }).catch(error => {\n                console.log(\"[Scripts.vue]: fetchData(error): \", error);\n            });\n        },\n\n    }\n\n}\n",{"version":3,"sources":["Scripts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"Scripts.vue","sourceRoot":"src/views","sourcesContent":["<template lang=\"pug\">\ndiv#page-scripts.scroll-containter.overflow-hidden-auto.back_cyan-1(v-if=\"isShowData\")\n    div.width-window.scripts__title\n        title-page.back_cyan-10(\n            :value=\"getTitleValue\"\n        )\n    div.width-window.scripts__content\n        div.panel-container\n            div.scripts__content-left.inline-block\n                div.scripts__section\n                    blocks-component(\n                        :value=\"material.blocks\"\n                        @input=\"handleInput('blocks', $event)\"\n                        :optionsDraggable=\"optionsDraggable\"\n                    )\n            div.scripts__content-right.scripts__panel-control.inline-block\n                scripts-panel(\n                    :title=\"$t('$controls.scripts')\"\n                    :count=\"material.blocks.length\"\n                    :needSave=\"needSave\"\n                    @onEmit=\"handleEmitControl\"\n                )\n</template>\n\n<script>\nimport TitlePage from '@/components/titles/TitlePage.vue';\nimport BlocksComponent from '@/components/elements/fields/BlocksComponent.vue';\n\nimport ScriptsPanel from '@/components/controlPanels/ScriptsPanel.vue';\n\nexport default {\n    name: 'PageScripts',\n    componentName: 'PageScripts',\n    components: {\n        TitlePage,\n        BlocksComponent,\n        ScriptsPanel\n    },\n    data() {\n        return {\n            optionsDraggable: {\n                handle: '.head-block__handlebar',\n                draggable: '.script-block',\n            },\n            isShowData: false,\n            originalMaterial: null,\n            material: {\n                blocks: []\n            }\n        };\n    },\n    computed: {\n        getTitleValue() {\n            return {\n                titleText: \"Скрипты для тестирования\",\n                titleInfo: \"(OS) Ubuntu 18.04.3 LTS\"\n            };\n        },\n        needSave() {\n            return !this.$panel.isEqual(this.material, this.originalMaterial);\n        }\n    },\n    created() {\n        this.fetchData();\n    },\n    methods: {\n        handleInput(key, value) {\n            this.material[key] = value;\n        },\n        handleEmitControl() {\n            console.log(\"[Scripts.vue]: handleEmitControl: \");\n            let data = this.setPositions(this.material.blocks);\n            data.map(block => {\n                if (block.status === 'NOT_CHANGED') {\n                    block.status = 'UPDATE';\n                }\n                return block;\n            });\n            console.log(\"POST DATA: \", data);\n            this.putScripts(data);\n        },\n        putScripts(putData) {\n            console.log(\"[Scripts.vue]: putScripts: \", putData);\n            this.$store.state.axios.put('/scripts', putData).then(response => {\n                console.log('[Scripts.vue]: putScripts(response): ', response);\n                if (response.status === 200) {\n                    this.$store.commit('addNotification', { \n                        text: `${ this.$t('$notifications.update_success') }`, \n                        color: 'green' \n                    });\n                    this.fetchData();\n                }\n            }).catch(error => {\n                console.log('[Scripts.vue]: putScripts(error): ', error);\n            })\n        },\n        setPositions(values) {\n            let i = 0;\n            let array = values.map(block => {\n                block.position = i++;\n                return block;\n            })\n            return array;\n        },\n        getSortPosition(values) {\n            let result = this.$panel.clone(values);\n            result.sort((a, b) => {\n                if (a.position < b.position) return -1;\n                if (a.position > b.position) return 1;\n                return 0;\n            });\n            return result;\n        },\n        fetchData() {\n            this.$store.state.axios.get('/scripts').then(response => {\n                console.log(\"[Scripts.vue]: fetchData(response): \", response);\n                if (response.status === 200){\n                    let material = { blocks: this.getSortPosition(response.data) };\n                    material.blocks.map(block => {\n                        block.status = 'NOT_CHANGED';\n                        return block;\n                    });\n                    this.material = material;\n                    this.originalMaterial = this.$panel.clone(this.material);\n                    this.isShowData = true;\n                }\n            }).catch(error => {\n                console.log(\"[Scripts.vue]: fetchData(error): \", error);\n            });\n        },\n\n    }\n\n}\n</script>\n\n<style lang=\"scss\">\n#page-scripts {\n    width: 100%;\n    height: calc(100vh - 60px);\n    box-sizing: border-box;\n    padding-bottom: 100px;\n    .scripts {\n        &__title {\n            position: -webkit-sticky; /* Required for Safari */\n            position: sticky;\n            top: -20px;\n            z-index: 100;\n        }\n        &__content {\n            width: 100%;\n            &-left {\n                width: 820px;\n            }\n            &-right {\n                width: 400px;\n                margin-left: 20px;\n                margin-top: 20px;\n            }\n        }\n        &__section {\n            margin-top: 20px;\n            width: 100%;\n            background-color: $white;\n        }\n        &__panel-control {\n            position: -webkit-sticky; /* Required for Safari */\n            position: sticky;\n            top: 100px;\n        }\n    }\n}\n</style>"]}]}