{"remainingRequest":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/components/notifications/ContainerNotifications.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/components/notifications/ContainerNotifications.vue","mtime":1570605800351},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { clearTimeout, setTimeout } from 'timers';\nexport default {\n    name: 'ContainerNotifications',\n    componentName: 'ContainerNotifications',\n    data() {\n        return {\n            isShow: false,\n            timeoutStart: undefined,\n            timeoutEnd: undefined,\n            timeoutNext: undefined,\n            curNotification: {\n                color: 'white',\n                text: ''\n            },\n        };\n    },\n    methods: {\n        nextNotification() {\n            if (this.$store.state.notifications.length > 0) {\n                this.clearTimeouts();\n                this.curNotification = this.$store.state.notifications[0];\n                this.timeoutStart = setTimeout(() => { this.isShow = true; }, 100);\n                this.timeoutNext = setTimeout(() => { \n                    this.isShow = false;\n                    this.$store.commit('removeFirstNotification');\n                    this.nextNotification();\n                }, 2500);\n            }\n        },\n        clearTimeouts() {\n            if (this.timeoutStart !== undefined) {\n                clearTimeout(this.timeoutStart);\n                this.timeoutStart = undefined;\n            }\n            if (this.timeoutEnd !== undefined) {\n                clearTimeout(this.timeoutEnd);\n                this.timeoutEnd = undefined;\n            }\n            if (this.timeoutNext !== undefined) {\n                clearTimeout(this.timeoutNext);\n                this.timeoutNext = undefined;\n            }\n        }\n    },\n    mounted() {\n        this.nextNotification();\n    },\n    beforeDestroy() {\n        this.clearTimeouts();\n        this.$store.commit('removeAllNotification');\n    }\n}\n",{"version":3,"sources":["ContainerNotifications.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ContainerNotifications.vue","sourceRoot":"src/components/notifications","sourcesContent":["<template lang=\"pug\">\ndiv.container-notifications.text-center(\n    v-if=\"isShow\"\n)\n    span.regular.font-body.container-notifications__inner(\n        :class=\"`${ curNotification.color }-notification`\"\n    ) {{ curNotification.text }}\n        \n</template>\n\n<script>\nimport { clearTimeout, setTimeout } from 'timers';\nexport default {\n    name: 'ContainerNotifications',\n    componentName: 'ContainerNotifications',\n    data() {\n        return {\n            isShow: false,\n            timeoutStart: undefined,\n            timeoutEnd: undefined,\n            timeoutNext: undefined,\n            curNotification: {\n                color: 'white',\n                text: ''\n            },\n        };\n    },\n    methods: {\n        nextNotification() {\n            if (this.$store.state.notifications.length > 0) {\n                this.clearTimeouts();\n                this.curNotification = this.$store.state.notifications[0];\n                this.timeoutStart = setTimeout(() => { this.isShow = true; }, 100);\n                this.timeoutNext = setTimeout(() => { \n                    this.isShow = false;\n                    this.$store.commit('removeFirstNotification');\n                    this.nextNotification();\n                }, 2500);\n            }\n        },\n        clearTimeouts() {\n            if (this.timeoutStart !== undefined) {\n                clearTimeout(this.timeoutStart);\n                this.timeoutStart = undefined;\n            }\n            if (this.timeoutEnd !== undefined) {\n                clearTimeout(this.timeoutEnd);\n                this.timeoutEnd = undefined;\n            }\n            if (this.timeoutNext !== undefined) {\n                clearTimeout(this.timeoutNext);\n                this.timeoutNext = undefined;\n            }\n        }\n    },\n    mounted() {\n        this.nextNotification();\n    },\n    beforeDestroy() {\n        this.clearTimeouts();\n        this.$store.commit('removeAllNotification');\n    }\n}\n</script>\n\n<style lang=\"scss\">\n.container-notifications {\n    animation: notification-animation 2.4s ease-in-out; // styles/styleGuide.scss\n    height: 60px;\n    width: 100%;\n    left: 0;\n    right: 0;\n    z-index: 2000;\n    position: fixed;\n    bottom: -60px;\n    &__inner {\n        padding: 20px;\n        &.black-notification {\n            background-color: $black;\n            color: $white;\n        }\n        &.white-notification {\n            background-color: $white;\n            color: $black;\n        }\n        &.green-notification {\n            color: $white;\n            background-color: $green;\n        }\n        &.red-notification {\n            color: $white;\n            background-color: $red;\n        }\n        &.cyan-notification {\n            background-color: $cyan-dark;\n            color: $white;\n        }\n    }\n}\n</style>"]}]}