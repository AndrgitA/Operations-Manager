{"remainingRequest":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/babel-loader/lib/index.js!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/components/elements/fields/InputNumber.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/components/elements/fields/InputNumber.vue","mtime":1569232184656},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.parse-int\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'InputNumber',\n  componentName: 'InputNumber',\n  props: {\n    value: {\n      type: [String, Number],\n      default: null\n    },\n    placeholder: String,\n    label: String,\n    text: String,\n    style_component: {\n      type: Object,\n      default: null\n    },\n    isError: {\n      type: Boolean,\n      defaul: false\n    },\n    disabled: {\n      type: Boolean,\n      defaul: false\n    },\n    nullable: {\n      type: Boolean,\n      default: false\n    },\n    max: {\n      type: Number,\n      default: Infinity\n    },\n    min: {\n      type: Number,\n      default: -Infinity\n    },\n    integer: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      curValue: '',\n      focused: false,\n      idObject: ''\n    };\n  },\n  watch: {\n    value: {\n      handler: function handler(newValue, oldValue) {\n        if (Object.prototype.toString.call(newValue) === '[object Number]') {\n          this.curValue = isNaN(newValue) ? this.nullable ? '' : '0' : newValue.toString();\n        } else {\n          this.curValue = newValue.length === 0 ? this.nullable ? '' : '0' : newValue;\n        }\n      },\n      immediate: true\n    }\n  },\n  computed: {},\n  methods: {\n    keyPress: function keyPress(event) {\n      console.log(\"[InputNumber.vue]: keyPress: \", event.target.value);\n      var evt = event ? event : window.event;\n      var charCode = evt.which ? evt.which : evt.keyCode;\n\n      if (charCode < 48 || charCode > 57) {\n        evt.preventDefault();\n      }\n\n      console.log(charCode);\n    },\n    handleInput: function handleInput(event) {\n      console.log(\"[InputNumber.vue]: handleInput: \", event);\n      var targetValue = event.target.value,\n          parseValue = Number.parseInt(event.target.value);\n\n      if (targetValue !== '' && !isNaN(parseValue)) {\n        if (this.min > parseValue) {\n          this.$emit('input', this.min);\n          event.target.value = this.min.toString();\n        } else if (this.max < parseValue) {\n          this.$emit('input', this.max);\n          event.target.value = this.max.toString();\n        } else {\n          this.$emit('input', parseValue);\n        }\n      } else {\n        if (this.nullable) {\n          this.$emit('input', null);\n          event.target.value = '';\n        } else {\n          this.$emit('input', 0);\n          event.target.value = '0';\n        }\n      }\n    },\n    keyDown: function keyDown(key, event) {\n      console.log(\"[InputNumber.vue]: keyDown: \", key, event, event.target.value === '');\n      var parseValue = Number.parseInt(event.target.value);\n\n      if (key === 38) {\n        // up\n        event.preventDefault();\n        this.$emit('input', event.target.value === '' || isNaN(parseValue) ? 1 : parseValue + 1 > this.max ? this.max : ++parseValue);\n      } else if (key === 40) {\n        // down\n        event.preventDefault();\n        this.$emit('input', event.target.value === '' || isNaN(parseValue) || parseValue < 1 ? 0 : --parseValue);\n      }\n    },\n    handleFocus: function handleFocus(event) {\n      this.focused = true;\n    },\n    handleBlur: function handleBlur(event) {\n      this.focused = false;\n      var targetValue = event.target.value,\n          parseValue = Number.parseInt(event.target.value);\n\n      if (targetValue !== '' && !isNaN(parseValue)) {\n        if (this.min > parseValue) {\n          this.$emit('input', this.min);\n          event.target.value = this.min.toString();\n        } else if (this.max < parseValue) {\n          this.$emit('input', this.max);\n          event.target.value = this.max.toString();\n        } else {\n          this.$emit('input', parseValue);\n        }\n      } else {\n        if (this.nullable) {\n          this.$emit('input', null);\n          event.target.value = '';\n        } else {\n          this.$emit('input', 0);\n          event.target.value = '0';\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["InputNumber.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"pug\">\ndiv.input-number(\n    :class=`[\n        (!!style_component && !!style_component.class) ? style_component.class : '',\n        {\n            'is-disabled': disabled,\n            'is-focused': focused\n        }\n    ]`\n)\n    span.regular-font-body.input-number__label(\n        v-if=\"!!label\"\n        :class=\"{ 'error': (isError && (value === '' || value === null)) }\"\n    ) {{ label }}\n    div.input-number__inner.back_grey2.flex\n        div.input-number__prepend.inline-block\n            slot(name=\"prepend-input\")\n        input.input-number__input.inline-block.black.back_grey2(\n            :value=\"curValue\"\n            @input=\"handleInput\"\n            @change=\"handleInput\"\n            :placeholder=\"placeholder\"\n            :disabled=\"disabled\"\n            type=\"text\"\n            @keypress=\"keyPress\"\n            @keydown.up=\"keyDown(38, $event)\"\n            @keydown.down=\"keyDown(40, $event)\"\n            @focus=\"handleFocus\"\n            @blur=\"handleBlur\"\n            :id=\"idObject\"\n            ref=\"input\"\n        )\n        div.input-number__text.regular.font-tech.inline-block.grey50(v-if=\"!!text\") {{ text }}\n        div.input-number__append.inline-block\n            slot(name=\"append-input\")\n</template>\n\n<script>\nexport default {\n    name: 'InputNumber',\n    componentName: 'InputNumber',\n    props: {\n        value: {\n            type: [String, Number],\n            default: null\n        },\n        placeholder: String,\n        label: String,\n        text: String,\n        style_component: {\n            type: Object,\n            default: null\n        },\n        isError: {\n            type: Boolean,\n            defaul: false\n        },\n        disabled: {\n            type: Boolean,\n            defaul: false\n        },\n        nullable: {\n            type: Boolean,\n            default: false\n        },\n        max: {\n            type: Number,\n            default: Infinity\n        },\n        min: {\n            type: Number,\n            default: -Infinity\n        },\n        integer: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            curValue: '',\n            focused: false,\n            idObject: '',\n        }\n    },\n    watch: {\n        value: {\n            handler(newValue, oldValue) {\n                if (Object.prototype.toString.call(newValue) === '[object Number]') {\n                    this.curValue = isNaN(newValue) ? (this.nullable ? '' : '0') : newValue.toString();\n                } else {\n                    this.curValue = newValue.length === 0 ? (this.nullable ? '' : '0') : newValue;\n                }\n               \n            },\n            immediate: true\n        }\n    },\n    computed: {\n    },\n    methods: {\n        keyPress(event) {\n            console.log(\"[InputNumber.vue]: keyPress: \", event.target.value);\n            let evt = (event) ? event : window.event;\n            let charCode = (evt.which) ? evt.which : evt.keyCode;\n\n            if (charCode < 48 || charCode > 57) {\n                evt.preventDefault();\n            }\n            console.log(charCode);\n        },\n        handleInput(event) {\n            console.log(\"[InputNumber.vue]: handleInput: \", event);\n            let targetValue = event.target.value,\n                parseValue = Number.parseInt(event.target.value);\n\n            if (targetValue !== '' && !isNaN(parseValue)) {\n                if (this.min > parseValue) {\n                    this.$emit('input', this.min);\n                    event.target.value = this.min.toString();\n                } else if (this.max < parseValue) {\n                    this.$emit('input', this.max);\n                    event.target.value = this.max.toString();\n                } else {\n                    this.$emit('input', parseValue);\n                }\n            } else {\n                if (this.nullable) {\n                    this.$emit('input', null);\n                    event.target.value = '';\n                } else {\n                    this.$emit('input', 0);\n                    event.target.value = '0';\n                }\n            }\n        },\n        keyDown(key, event) {\n            console.log(\"[InputNumber.vue]: keyDown: \", key, event, event.target.value === '');\n            let parseValue = Number.parseInt(event.target.value);\n            if (key === 38) {   // up\n                event.preventDefault();\n                this.$emit('input', event.target.value === '' || isNaN(parseValue) ? 1 : (parseValue + 1 > this.max) ? this.max : ++parseValue);\n            } else if (key === 40) {            // down\n                event.preventDefault();\n                this.$emit('input', (event.target.value === '' || isNaN(parseValue) || parseValue < 1) ? 0 : --parseValue);\n            }\n        },\n        handleFocus(event) {\n            this.focused = true;\n        },\n        handleBlur(event) {\n            this.focused = false;\n            let targetValue = event.target.value,\n                parseValue = Number.parseInt(event.target.value);\n            if (targetValue !== '' && !isNaN(parseValue)) {\n                if (this.min > parseValue) {\n                    this.$emit('input', this.min);\n                    event.target.value = this.min.toString();\n                } else if (this.max < parseValue) {\n                    this.$emit('input', this.max);\n                    event.target.value = this.max.toString();\n                } else {\n                    this.$emit('input', parseValue);\n                }\n            } else {\n                if (this.nullable) {\n                    this.$emit('input', null);\n                    event.target.value = '';\n                } else {\n                    this.$emit('input', 0);\n                    event.target.value = '0';\n                }\n            }\n        }\n    }\n\n}\n</script>\n\n<style lang=\"scss\">\n.input-number {\n    width: 100%;\n    position: relative;\n    padding: 0;\n    &__label {\n        width: 100%;\n        padding: 10px 0;\n    }\n    &__inner {\n        width: calc(100% - 30px);\n        height: 38px;\n        border: 1px solid $grey10;\n        padding: 0 14px;\n        &:hover {\n            border: 1px solid $grey33;\n        }\n    }\n    &__input {\n        flex: 1;\n        width: 100%;\n        height: 100%;\n        box-sizing: border-box;\n        border: none;\n        outline: none;\n\n\n    }\n    &__text {\n        margin-left: 10px;\n        margin-top: 12px;\n        margin-bottom: 11px;\n    }\n    &.is-focused {\n        .input-number {\n            &__inner {\n                background-color: $white;\n                border: 1px solid $grey33;\n            }\n            &__input {\n                background-color: $white;\n            }\n        }\n    }\n    &.is-disabled {\n        color: $grey50;\n        .input-number {\n            &__inner {\n                border: 1px solid $grey10;\n                &:hover {\n                    border: 1px solid $grey10;\n                }\n            }\n            &__input {\n                cursor: not-allowed;\n                color: $grey50;\n            }\n        }\n    }\n}\n</style>"],"sourceRoot":"src/components/elements/fields"}]}