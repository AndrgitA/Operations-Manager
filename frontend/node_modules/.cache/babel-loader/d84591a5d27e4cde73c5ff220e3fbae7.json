{"remainingRequest":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/thread-loader/dist/cjs.js!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/babel-loader/lib/index.js!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/views/Scripts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/views/Scripts.vue","mtime":1570712642289},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TitlePage from '@/components/titles/TitlePage.vue';\nimport BlocksComponent from '@/components/elements/fields/BlocksComponent.vue';\nimport ScriptsPanel from '@/components/controlPanels/ScriptsPanel.vue';\nexport default {\n  name: 'PageScripts',\n  componentName: 'PageScripts',\n  components: {\n    TitlePage: TitlePage,\n    BlocksComponent: BlocksComponent,\n    ScriptsPanel: ScriptsPanel\n  },\n  data: function data() {\n    return {\n      optionsDraggable: {\n        handle: '.head-block__handlebar',\n        draggable: '.script-block'\n      },\n      isShowData: false,\n      originalMaterial: null,\n      material: {\n        blocks: []\n      }\n    };\n  },\n  computed: {\n    getTitleValue: function getTitleValue() {\n      return {\n        titleText: \"Скрипты для тестирования\",\n        titleInfo: \"(OS) Ubuntu 18.04.3 LTS\"\n      };\n    },\n    needSave: function needSave() {\n      return !this.$panel.isEqual(this.material, this.originalMaterial);\n    }\n  },\n  created: function created() {\n    this.fetchData();\n  },\n  methods: {\n    handleInput: function handleInput(key, value) {\n      this.material[key] = value;\n    },\n    handleEmitControl: function handleEmitControl() {\n      console.log(\"[Scripts.vue]: handleEmitControl: \");\n      var data = this.setPositions(this.material.blocks);\n      data.map(function (block) {\n        if (block.status === 'NOT_CHANGED') {\n          block.status = 'UPDATE';\n        }\n\n        return block;\n      });\n      console.log(\"POST DATA: \", data);\n      this.putScripts(data);\n    },\n    putScripts: function putScripts(putData) {\n      var _this = this;\n\n      console.log(\"[Scripts.vue]: putScripts: \", putData);\n      this.$store.state.axios.put('/scripts', putData).then(function (response) {\n        console.log('[Scripts.vue]: putScripts(response): ', response);\n\n        if (response.status === 200) {\n          _this.$store.commit('addNotification', {\n            text: \"\".concat(_this.$t('$notifications.update_success')),\n            color: 'green'\n          });\n\n          _this.fetchData();\n        }\n      }).catch(function (error) {\n        console.log('[Scripts.vue]: putScripts(error): ', error);\n      });\n    },\n    setPositions: function setPositions(values) {\n      var i = 0;\n      var array = values.map(function (block) {\n        block.position = i++;\n        return block;\n      });\n      return array;\n    },\n    getSortPosition: function getSortPosition(values) {\n      var result = this.$panel.clone(values);\n      result.sort(function (a, b) {\n        if (a.position < b.position) return -1;\n        if (a.position > b.position) return 1;\n        return 0;\n      });\n      return result;\n    },\n    fetchData: function fetchData() {\n      var _this2 = this;\n\n      this.$store.state.axios.get('/scripts').then(function (response) {\n        console.log(\"[Scripts.vue]: fetchData(response): \", response);\n\n        if (response.status === 200) {\n          var material = {\n            blocks: _this2.getSortPosition(response.data)\n          };\n          material.blocks.map(function (block) {\n            block.status = 'NOT_CHANGED';\n            return block;\n          });\n          _this2.material = material;\n          _this2.originalMaterial = _this2.$panel.clone(_this2.material);\n          _this2.isShowData = true;\n        }\n      }).catch(function (error) {\n        console.log(\"[Scripts.vue]: fetchData(error): \", error);\n      });\n    }\n  }\n};",{"version":3,"sources":["Scripts.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"pug\">\ndiv#page-scripts.scroll-containter.overflow-hidden-auto.back_cyan-1(v-if=\"isShowData\")\n    div.width-window.scripts__title\n        title-page.back_cyan-10(\n            :value=\"getTitleValue\"\n        )\n    div.width-window.scripts__content\n        div.panel-container\n            div.scripts__content-left.inline-block\n                div.scripts__section\n                    blocks-component(\n                        :value=\"material.blocks\"\n                        @input=\"handleInput('blocks', $event)\"\n                        :optionsDraggable=\"optionsDraggable\"\n                    )\n            div.scripts__content-right.scripts__panel-control.inline-block\n                scripts-panel(\n                    :title=\"$t('$controls.scripts')\"\n                    :count=\"material.blocks.length\"\n                    :needSave=\"needSave\"\n                    @onEmit=\"handleEmitControl\"\n                )\n</template>\n\n<script>\nimport TitlePage from '@/components/titles/TitlePage.vue';\nimport BlocksComponent from '@/components/elements/fields/BlocksComponent.vue';\n\nimport ScriptsPanel from '@/components/controlPanels/ScriptsPanel.vue';\n\nexport default {\n    name: 'PageScripts',\n    componentName: 'PageScripts',\n    components: {\n        TitlePage,\n        BlocksComponent,\n        ScriptsPanel\n    },\n    data() {\n        return {\n            optionsDraggable: {\n                handle: '.head-block__handlebar',\n                draggable: '.script-block',\n            },\n            isShowData: false,\n            originalMaterial: null,\n            material: {\n                blocks: []\n            }\n        };\n    },\n    computed: {\n        getTitleValue() {\n            return {\n                titleText: \"Скрипты для тестирования\",\n                titleInfo: \"(OS) Ubuntu 18.04.3 LTS\"\n            };\n        },\n        needSave() {\n            return !this.$panel.isEqual(this.material, this.originalMaterial);\n        }\n    },\n    created() {\n        this.fetchData();\n    },\n    methods: {\n        handleInput(key, value) {\n            this.material[key] = value;\n        },\n        handleEmitControl() {\n            console.log(\"[Scripts.vue]: handleEmitControl: \");\n            let data = this.setPositions(this.material.blocks);\n            data.map(block => {\n                if (block.status === 'NOT_CHANGED') {\n                    block.status = 'UPDATE';\n                }\n                return block;\n            });\n            console.log(\"POST DATA: \", data);\n            this.putScripts(data);\n        },\n        putScripts(putData) {\n            console.log(\"[Scripts.vue]: putScripts: \", putData);\n            this.$store.state.axios.put('/scripts', putData).then(response => {\n                console.log('[Scripts.vue]: putScripts(response): ', response);\n                if (response.status === 200) {\n                    this.$store.commit('addNotification', { \n                        text: `${ this.$t('$notifications.update_success') }`, \n                        color: 'green' \n                    });\n                    this.fetchData();\n                }\n            }).catch(error => {\n                console.log('[Scripts.vue]: putScripts(error): ', error);\n            })\n        },\n        setPositions(values) {\n            let i = 0;\n            let array = values.map(block => {\n                block.position = i++;\n                return block;\n            })\n            return array;\n        },\n        getSortPosition(values) {\n            let result = this.$panel.clone(values);\n            result.sort((a, b) => {\n                if (a.position < b.position) return -1;\n                if (a.position > b.position) return 1;\n                return 0;\n            });\n            return result;\n        },\n        fetchData() {\n            this.$store.state.axios.get('/scripts').then(response => {\n                console.log(\"[Scripts.vue]: fetchData(response): \", response);\n                if (response.status === 200){\n                    let material = { blocks: this.getSortPosition(response.data) };\n                    material.blocks.map(block => {\n                        block.status = 'NOT_CHANGED';\n                        return block;\n                    });\n                    this.material = material;\n                    this.originalMaterial = this.$panel.clone(this.material);\n                    this.isShowData = true;\n                }\n            }).catch(error => {\n                console.log(\"[Scripts.vue]: fetchData(error): \", error);\n            });\n        },\n\n    }\n\n}\n</script>\n\n<style lang=\"scss\">\n#page-scripts {\n    width: 100%;\n    height: calc(100vh - 60px);\n    box-sizing: border-box;\n    padding-bottom: 100px;\n    .scripts {\n        &__title {\n            position: -webkit-sticky; /* Required for Safari */\n            position: sticky;\n            top: -20px;\n            z-index: 100;\n        }\n        &__content {\n            width: 100%;\n            &-left {\n                width: 820px;\n            }\n            &-right {\n                width: 400px;\n                margin-left: 20px;\n                margin-top: 20px;\n            }\n        }\n        &__section {\n            margin-top: 20px;\n            width: 100%;\n            background-color: $white;\n        }\n        &__panel-control {\n            position: -webkit-sticky; /* Required for Safari */\n            position: sticky;\n            top: 100px;\n        }\n    }\n}\n</style>"],"sourceRoot":"src/views"}]}