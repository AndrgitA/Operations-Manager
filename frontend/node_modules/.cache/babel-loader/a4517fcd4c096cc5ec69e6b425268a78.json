{"remainingRequest":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/babel-loader/lib/index.js!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/components/elements/fields/blocks/ScriptBlock.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/components/elements/fields/blocks/ScriptBlock.vue","mtime":1570688492826},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import HeadContent from '@/components/Fields/Additional/HeadContent.vue'\n// import InputLangComponent from '@/components/Fields/InputLocaleComponent.vue'\n// import TextareaLangComponent from '@/components/Fields/TextareaLocaleComponent.vue'\n// import MarkdownLocaleComponent from '@/components/Fields/Additional/MarkdownLocaleComponent.vue'\nexport default {//     props: {\n  //         value: Object,\n  //         index: Number,\n  //         type: String,\n  //         disabled: Boolean\n  //     },\n  //     data() {\n  //         return {\n  //             options: [ this.$t('$common.dropdown.add_head'), this.$t('$common.dropdown.remove_block') ],\n  //         }\n  //     },\n  //     watch: {\n  //         value: {\n  //             handler: function(n, o){\n  //                 this.checkTitle();\n  //             },\n  //             immediate: true\n  //         }\n  //     },\n  //     computed: {\n  //         isTitle(){\n  //             return 'head' in this.value;\n  //         }\n  //     },\n  //     created: function(){\n  //         //this.checkTitle();\n  //     },\n  //     components: {\n  //         HeadContent, InputLangComponent, TextareaLangComponent, MarkdownLocaleComponent\n  //     },\n  //     methods: {\n  //         edit(key, v){\n  //             let new_value = null;\n  //             if (key == 'head'){\n  //                 new_value = {\n  //                     head: v,\n  //                     text: this.value.text\n  //                 }\n  //             } else {  \n  //                 new_value = this.value;\n  //                 new_value[key] = v;\n  //             }\n  //             this.$emit('input', new_value);\n  //         },\n  //         checkTitle(){\n  //             if (this.isTitle){ \n  //                 this.options = [ this.$t('$common.dropdown.remove_head'), this.$t('$common.dropdown.remove_block') ];\n  //             } else {\n  //                 this.options = [ this.$t('$common.dropdown.add_head'), this.$t('$common.dropdown.remove_block') ]; \n  //             }\n  //         },\n  //         onSelect(index){\n  //             if (index == 0){\n  //                 let new_value = JSON.parse(JSON.stringify(this.value));\n  //                 if (this.isTitle) {\n  //                     delete new_value.head;\n  //                 } else {\n  //                     new_value.head = {\n  //                         en: '',\n  //                         ru: ''\n  //                     }\n  //                 }\n  //                 this.$emit('input', new_value);\n  // /*\n  //                 if (this.isTitle){\n  //                     delete this.value.head;\n  //                 } else {\n  //                     this.value.head = {\n  //                         en: '',\n  //                         ru: ''\n  //                     }\n  //                 }*/\n  //             } else {\n  //                 this.$emit('onRemove', this.index);\n  //             }\n  //         }\n  //     }\n};",{"version":3,"sources":["ScriptBlock.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AAEA;AACA,eAAA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9EA,CAAA","sourcesContent":["<template lang=\"pug\">\ndiv.paragraph-content\n    //- head-content.hc(\n    //-     :index_content=\"index\"\n    //-     :type=\"$t('$common.types.PARAGRAPH')\",\n    //-     :options=\"options\"\n    //-     @onSelect=\"onSelect\"\n    //-     :disabled=\"disabled\"\n    //- )\n    //- input-lang-component(\n    //-     v-if=\"isTitle\"\n    //-     v-model=\"value.head\"\n    //-     @input=\"edit('head', $event)\"\n    //-     :options=\"{'max_length': 80, disabled: disabled}\"\n\n    //- )\n    //- //textarea-lang-component(\n    //-     v-model=\"value.text\"\n    //-     @input=\"edit('text', $event)\"\n    //-     :options=\"{'max_length': 1000, 'autosize_': true, 'crop': false }\"\n    //- //)\n    //- markdown-locale-component.mklc(\n    //-     v-model=\"value.text\"\n    //-     @input=\"edit('text', $event)\"\n    //-     :options=\"{'max_length': 1000, 'crop': false, 'disabled': disabled}\"\n    //-     :index=\"index\"\n    //- )\n    \n</template>\n\n<script>\n\n// import HeadContent from '@/components/Fields/Additional/HeadContent.vue'\n// import InputLangComponent from '@/components/Fields/InputLocaleComponent.vue'\n// import TextareaLangComponent from '@/components/Fields/TextareaLocaleComponent.vue'\n\n// import MarkdownLocaleComponent from '@/components/Fields/Additional/MarkdownLocaleComponent.vue'\nexport default {\n//     props: {\n//         value: Object,\n//         index: Number,\n//         type: String,\n//         disabled: Boolean\n//     },\n//     data() {\n//         return {\n//             options: [ this.$t('$common.dropdown.add_head'), this.$t('$common.dropdown.remove_block') ],\n//         }\n//     },\n//     watch: {\n//         value: {\n//             handler: function(n, o){\n//                 this.checkTitle();\n//             },\n//             immediate: true\n//         }\n//     },\n//     computed: {\n//         isTitle(){\n//             return 'head' in this.value;\n//         }\n//     },\n//     created: function(){\n//         //this.checkTitle();\n//     },\n//     components: {\n//         HeadContent, InputLangComponent, TextareaLangComponent, MarkdownLocaleComponent\n//     },\n//     methods: {\n//         edit(key, v){\n//             let new_value = null;\n//             if (key == 'head'){\n//                 new_value = {\n//                     head: v,\n//                     text: this.value.text\n//                 }\n//             } else {  \n//                 new_value = this.value;\n//                 new_value[key] = v;\n//             }\n//             this.$emit('input', new_value);\n//         },\n//         checkTitle(){\n//             if (this.isTitle){ \n//                 this.options = [ this.$t('$common.dropdown.remove_head'), this.$t('$common.dropdown.remove_block') ];\n//             } else {\n//                 this.options = [ this.$t('$common.dropdown.add_head'), this.$t('$common.dropdown.remove_block') ]; \n//             }\n//         },\n//         onSelect(index){\n//             if (index == 0){\n//                 let new_value = JSON.parse(JSON.stringify(this.value));\n//                 if (this.isTitle) {\n//                     delete new_value.head;\n//                 } else {\n//                     new_value.head = {\n//                         en: '',\n//                         ru: ''\n//                     }\n//                 }\n//                 this.$emit('input', new_value);\n\n// /*\n//                 if (this.isTitle){\n//                     delete this.value.head;\n//                 } else {\n//                     this.value.head = {\n//                         en: '',\n//                         ru: ''\n//                     }\n//                 }*/\n//             } else {\n//                 this.$emit('onRemove', this.index);\n//             }\n//         }\n//     }\n}\n</script>\n\n<style lang=\"scss\">\n// @import \"@/assets/styles/variables.sass\"\n// .paragraph-content\n//     width: 100%\n//     position: relative\n//     .hc\n//         margin-bottom: 20px\n//     .mklc\n        \n</style>"],"sourceRoot":"src/components/elements/fields/blocks"}]}