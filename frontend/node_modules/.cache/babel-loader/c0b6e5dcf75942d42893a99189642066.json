{"remainingRequest":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/thread-loader/dist/cjs.js!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/babel-loader/lib/index.js!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/plugins/panel/panel.js","dependencies":[{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/plugins/panel/panel.js","mtime":1570790569477},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1570790663275},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1570790665071},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/babel-loader/lib/index.js","mtime":1570790663215}],"contextDependencies":[],"result":["import { getClone, addNewType } from './panelCloning.js';\nimport { isEqual, isEqualOf, addNewEqualType } from './panelEquals.js';\nconst panel = {\n  get clone() {\n    return getClone;\n  },\n\n  get newCloneType() {\n    return addNewType;\n  },\n\n  get isEqual() {\n    return isEqual;\n  },\n\n  get isEqualOf() {\n    return isEqualOf;\n  },\n\n  get newEqualType() {\n    return addNewEqualType;\n  }\n\n};\n\nconst install = function install(Vue, options) {\n  console.log('[panel.js]: install'); // Vue.getClone = getCLone;\n\n  if (Vue.prototype.$panel === undefined) {\n    console.log('[panel.js]: initPlugin(panel)');\n    Object.defineProperty(Vue.prototype, '$panel', {\n      value: panel,\n      writable: false,\n      enumerable: true,\n      configurable: true\n    });\n  }\n};\n\nexport default {\n  install\n};",{"version":3,"sources":["/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/plugins/panel/panel.js"],"names":["getClone","addNewType","isEqual","isEqualOf","addNewEqualType","panel","clone","newCloneType","newEqualType","install","Vue","options","console","log","prototype","$panel","undefined","Object","defineProperty","value","writable","enumerable","configurable"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,mBAArC;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,eAA7B,QAAoD,kBAApD;AAGA,MAAMC,KAAK,GAAG;AACV,MAAIC,KAAJ,GAAY;AAAE,WAAON,QAAP;AAAiB,GADrB;;AAEV,MAAIO,YAAJ,GAAmB;AAAE,WAAON,UAAP;AAAmB,GAF9B;;AAGV,MAAIC,OAAJ,GAAc;AAAE,WAAOA,OAAP;AAAgB,GAHtB;;AAIV,MAAIC,SAAJ,GAAgB;AAAE,WAAOA,SAAP;AAAkB,GAJ1B;;AAKV,MAAIK,YAAJ,GAAmB;AAAE,WAAOJ,eAAP;AAAwB;;AALnC,CAAd;;AAQA,MAAMK,OAAO,GAAG,SAAVA,OAAU,CAASC,GAAT,EAAcC,OAAd,EAAuB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EADmC,CAEnC;;AACA,MAAIH,GAAG,CAACI,SAAJ,CAAcC,MAAd,KAAyBC,SAA7B,EAAwC;AACpCJ,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AAEAI,IAAAA,MAAM,CAACC,cAAP,CAAsBR,GAAG,CAACI,SAA1B,EAAqC,QAArC,EAA+C;AAC3CK,MAAAA,KAAK,EAAEd,KADoC;AAE3Ce,MAAAA,QAAQ,EAAE,KAFiC;AAG3CC,MAAAA,UAAU,EAAE,IAH+B;AAI3CC,MAAAA,YAAY,EAAE;AAJ6B,KAA/C;AAMH;AACJ,CAbD;;AAeA,eAAe;AACXb,EAAAA;AADW,CAAf","sourcesContent":["import { getClone, addNewType } from './panelCloning.js';\nimport { isEqual, isEqualOf, addNewEqualType } from './panelEquals.js';\n\n\nconst panel = {\n    get clone() { return getClone },\n    get newCloneType() { return addNewType },\n    get isEqual() { return isEqual },\n    get isEqualOf() { return isEqualOf },\n    get newEqualType() { return addNewEqualType }\n};\n\nconst install = function(Vue, options) {\n    console.log('[panel.js]: install');\n    // Vue.getClone = getCLone;\n    if (Vue.prototype.$panel === undefined) {\n        console.log('[panel.js]: initPlugin(panel)');\n        \n        Object.defineProperty(Vue.prototype, '$panel', {\n            value: panel,\n            writable: false,\n            enumerable: true,\n            configurable: true\n        });\n    }\n};\n\nexport default {\n    install\n}"]}]}