{"remainingRequest":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/babel-loader/lib/index.js!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/assets/js/date.js","dependencies":[{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/assets/js/date.js","mtime":1569570326915},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nvar NOT_I18n = {\n  \"$date.ago\": \"Назад\",\n  \"$date.day\": \"День\",\n  \"$date.days\": \"Дней\",\n  \"$date.h\": \"ч\",\n  \"$date.m\": \"м\",\n  \"$date.never\": \"Никогда\",\n  \"$date.today\": \"Сегодня\",\n  \"$date.s\": \"с\",\n  \"$month.apr\": \"Апр\",\n  \"$month.aug\": \"Авг\",\n  \"$month.dec\": \"Дек\",\n  \"$month.feb\": \"Фев\",\n  \"$month.jan\": \"Янв\",\n  \"$month.jul\": \"Июль\",\n  \"$month.jun\": \"Июнь\",\n  \"$month.mar\": \"Мар\",\n  \"$month.nov\": \"Ноя\",\n  \"$month.oct\": \"Окт\",\n  \"$month.sep\": \"Сен\",\n  \"$month.april\": \"Апреля\",\n  \"$month.august\": \"Августа\",\n  \"$month.december\": \"Декабря\",\n  \"$month.february\": \"Февраля\",\n  \"$month.january\": \"Января\",\n  \"$month.july\": \"Июля\",\n  \"$month.june\": \"Июня\",\n  \"$month.march\": \"Марта\",\n  \"$month.may\": \"Мая\",\n  \"$month.november\": \"Ноября\",\n  \"$month.october\": \"Октября\",\n  \"$month.september\": \"Сентября\",\n  \"$month.april_n\": \"Апрель\",\n  \"$month.august_n\": \"Август\",\n  \"$month.december_n\": \"Декабрь\",\n  \"$month.february_n\": \"Февраль\",\n  \"$month.january_n\": \"Январь\",\n  \"$month.july_n\": \"Июль\",\n  \"$month.june_n\": \"Июнь\",\n  \"$month.march_n\": \"Март\",\n  \"$month.may_n\": \"Май\",\n  \"$month.november_n\": \"Ноябрь\",\n  \"$month.october_n\": \"Октябрь\",\n  \"$month.september_n\": \"Сентябрь\"\n};\nvar cur_Struct = {\n  '$t': function $t(str) {\n    return NOT_I18n[str] || str;\n  }\n};\n\nDate.prototype.getMyFormat = function () {\n  var MM = this.getMonth() + 1;\n  var DD = this.getDate();\n  var YY = this.getFullYear();\n  var mm = this.getMinutes();\n  var hh = this.getHours();\n  return [(DD > 9 ? '' : '0') + DD + '.', (MM > 9 ? '' : '0') + MM + '.', YY + '_', (hh > 9 ? '' : '0') + hh + ':', (mm > 9 ? '' : '0') + mm].join('');\n}; // // String.prototype.timeDifference = function(f = null) {\n// //     let app = f === null || f === undefined ? cur_Struct : f;\n// //     let tmp_date1 = new Date(this.replace(/(\\d{2})\\.(\\d{2})\\.(\\d{4})\\_(\\d{2})\\:(\\d{2})/, \"$3-$2-$1T$4:$5:00Z\"));\n// //     let tmp_date2 = Date.now();\n// //     if (tmp_date1 instanceof Date && tmp_date1.toString() !== 'Invalid Date') {\n// //         let res = tmp_date2 - tmp_date1;\n// //         if (res < 0) {\n// //             return app.$t('$date.never');\n// //         } \n// //         res = Math.round(res / 864E5);\n// //         if (res === 0) {\n// //             return app.$t('$date.today');\n// //         } else if (res === 1) {\n// //             return `1 ${ app.$t('$date.day') } ${ app.$t('$date.ago') }`;\n// //         }\n// //         return `${res} ${ app.$t('$date.days') } ${ app.$t('$date.ago') }`;\n// //     }\n// //     return app.$t('$date.never');\n// // }\n\n\nString.prototype.toDateMyFormat = function (c, f) {\n  var app = f === null || f === undefined ? cur_Struct : f;\n  var tmp_date = new Date(\"\".concat(this, \"Z\"));\n  var month = [app.$t(\"$month.january\"), app.$t(\"$month.february\"), app.$t(\"$month.march\"), app.$t(\"$month.april\"), app.$t(\"$month.may\"), app.$t(\"$month.june\"), app.$t(\"$month.july\"), app.$t(\"$month.august\"), app.$t(\"$month.september\"), app.$t(\"$month.october\"), app.$t(\"$month.november\"), app.$t(\"$month.december\")];\n\n  if (Object.prototype.toString.call(tmp_date) === '[object Date]' && tmp_date.toString() !== 'Invalid Date') {\n    switch (c) {\n      case 0:\n        // lowerCase (DD month YYYY)\n        return \"\".concat(tmp_date.getDate(), \" \").concat(month[tmp_date.getMonth()].toLowerCase(), \" \").concat(tmp_date.getFullYear());\n\n      case 1:\n        // lowerCase (DD month YYYY HH:MM)\n        return tmp_date.getDate() + ' ' + month[tmp_date.getMonth()].toLowerCase() + ' ' + tmp_date.getFullYear() + '  ' + (tmp_date.getHours() > 9 ? '' : '0') + tmp_date.getHours() + ':' + (tmp_date.getMinutes() > 9 ? '' : '0') + tmp_date.getMinutes();\n\n      case 2:\n        // lowerCase (DD month)\n        return \"\".concat(tmp_date.getDate(), \" \").concat(month[tmp_date.getMonth()].toLowerCase());\n\n      default:\n        return tmp_date;\n    }\n  } // return app.$t('$date.never');\n\n\n  return '';\n};",{"version":3,"sources":["/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/assets/js/date.js"],"names":["NOT_I18n","cur_Struct","str","Date","prototype","getMyFormat","MM","getMonth","DD","getDate","YY","getFullYear","mm","getMinutes","hh","getHours","join","String","toDateMyFormat","c","f","app","undefined","tmp_date","month","$t","Object","toString","call","toLowerCase"],"mappings":"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","sourcesContent":["const NOT_I18n = {\n    \"$date.ago\": \"Назад\",\n    \"$date.day\": \"День\",\n    \"$date.days\": \"Дней\",\n    \"$date.h\": \"ч\",\n    \"$date.m\": \"м\",\n    \"$date.never\": \"Никогда\",\n    \"$date.today\": \"Сегодня\",\n    \"$date.s\": \"с\",\n    \"$month.apr\": \"Апр\",\n    \"$month.aug\": \"Авг\",\n    \"$month.dec\": \"Дек\",\n    \"$month.feb\": \"Фев\",\n    \"$month.jan\": \"Янв\",\n    \"$month.jul\": \"Июль\",\n    \"$month.jun\": \"Июнь\",\n    \"$month.mar\": \"Мар\",\n    \"$month.nov\": \"Ноя\",\n    \"$month.oct\": \"Окт\",\n    \"$month.sep\": \"Сен\",\n    \"$month.april\": \"Апреля\",\n    \"$month.august\": \"Августа\",\n    \"$month.december\": \"Декабря\",\n    \"$month.february\": \"Февраля\",\n    \"$month.january\": \"Января\",\n    \"$month.july\": \"Июля\",\n    \"$month.june\": \"Июня\",\n    \"$month.march\": \"Марта\",\n    \"$month.may\": \"Мая\",\n    \"$month.november\": \"Ноября\",\n    \"$month.october\": \"Октября\",\n    \"$month.september\": \"Сентября\",\n    \"$month.april_n\": \"Апрель\",\n    \"$month.august_n\": \"Август\",\n    \"$month.december_n\": \"Декабрь\",\n    \"$month.february_n\": \"Февраль\",\n    \"$month.january_n\": \"Январь\",\n    \"$month.july_n\": \"Июль\",\n    \"$month.june_n\": \"Июнь\",\n    \"$month.march_n\": \"Март\",\n    \"$month.may_n\": \"Май\",\n    \"$month.november_n\": \"Ноябрь\",\n    \"$month.october_n\": \"Октябрь\",\n    \"$month.september_n\": \"Сентябрь\", \n};\n\nconst cur_Struct = {\n    '$t': str => (NOT_I18n[str] || str)\n};\n\n\nDate.prototype.getMyFormat = function() {\n    let MM = this.getMonth() + 1;\n    let DD = this.getDate();\n    let YY = this.getFullYear();\n    let mm = this.getMinutes();\n    let hh = this.getHours();\n\n    return [\n        (DD > 9 ? '' : '0') + DD + '.',\n        (MM > 9 ? '' : '0') + MM + '.',\n        YY + '_',\n        (hh > 9 ? '' : '0') + hh + ':',\n        (mm > 9 ? '' : '0') + mm\n    ].join('');\n};\n\n// // String.prototype.timeDifference = function(f = null) {\n// //     let app = f === null || f === undefined ? cur_Struct : f;\n// //     let tmp_date1 = new Date(this.replace(/(\\d{2})\\.(\\d{2})\\.(\\d{4})\\_(\\d{2})\\:(\\d{2})/, \"$3-$2-$1T$4:$5:00Z\"));\n// //     let tmp_date2 = Date.now();\n// //     if (tmp_date1 instanceof Date && tmp_date1.toString() !== 'Invalid Date') {\n// //         let res = tmp_date2 - tmp_date1;\n// //         if (res < 0) {\n// //             return app.$t('$date.never');\n// //         } \n// //         res = Math.round(res / 864E5);\n// //         if (res === 0) {\n// //             return app.$t('$date.today');\n// //         } else if (res === 1) {\n// //             return `1 ${ app.$t('$date.day') } ${ app.$t('$date.ago') }`;\n// //         }\n// //         return `${res} ${ app.$t('$date.days') } ${ app.$t('$date.ago') }`;\n// //     }\n// //     return app.$t('$date.never');\n// // }\n\nString.prototype.toDateMyFormat = function(c, f) {\n    let app = (f === null || f === undefined) ? cur_Struct : f;\n    let tmp_date = new Date(`${ this }Z`);\n    let month = [ \n        app.$t(\"$month.january\"), app.$t(\"$month.february\"), app.$t(\"$month.march\"), app.$t(\"$month.april\"),\n        app.$t(\"$month.may\"), app.$t(\"$month.june\"), app.$t(\"$month.july\"), app.$t(\"$month.august\"),\n        app.$t(\"$month.september\"), app.$t(\"$month.october\"), app.$t(\"$month.november\"), app.$t(\"$month.december\")\n    ];\n\n    if (Object.prototype.toString.call(tmp_date) === '[object Date]' && tmp_date.toString() !== 'Invalid Date'){\n        switch(c){ \n            case 0: // lowerCase (DD month YYYY)\n                return `${ tmp_date.getDate() } ${ month[tmp_date.getMonth()].toLowerCase() } ${ tmp_date.getFullYear() }`;\n            case 1: // lowerCase (DD month YYYY HH:MM)\n                return tmp_date.getDate() + ' ' + \n                       month[tmp_date.getMonth()].toLowerCase() + ' ' + \n                       tmp_date.getFullYear() + '  ' + \n                       (tmp_date.getHours() > 9 ? '' : '0') + tmp_date.getHours() + ':' + \n                       (tmp_date.getMinutes() > 9 ? '' : '0') + tmp_date.getMinutes();\n            case 2: // lowerCase (DD month)\n                return `${ tmp_date.getDate() } ${ month[tmp_date.getMonth()].toLowerCase() }`;\n            default: \n                return tmp_date\n        }\n    } \n    // return app.$t('$date.never');\n    return '';\n};"]}]}