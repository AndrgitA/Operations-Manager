{"remainingRequest":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/babel-loader/lib/index.js!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/tools/additionalMain.js","dependencies":[{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/tools/additionalMain.js","mtime":1570790569477},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1570790663275},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/babel-loader/lib/index.js","mtime":1570790663215}],"contextDependencies":[],"result":["/**\n * Initialize User by token before init App\n * @param { AxiosStatic } http interface for http request\n * @param { String } token token identification\n * @param { Function } callbackFunction callback function. Called after request to back.\n */\nvar initUser = function initUser(http, token, callbackFunction) {\n  http.get('/login', {\n    headers: {\n      Token: token\n    }\n  }).then(function (response) {\n    console.log('[initMain.js]: initUser(response): ', response);\n    var data = response.data;\n    var tmp = {\n      login: data.login,\n      role: data.role,\n      id: data.id\n    };\n    callbackFunction(tmp);\n  }).catch(function (error) {\n    console.log(\"initMain.js]: initUser(error): \", error);\n    callbackFunction(null);\n  });\n};\n\nexport { initUser };",{"version":3,"sources":["/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/tools/additionalMain.js"],"names":["initUser","http","token","callbackFunction","get","headers","Token","then","response","console","log","data","tmp","login","role","id","catch","error"],"mappings":"AAAA;;;;;;AAMA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAASC,IAAT,EAAeC,KAAf,EAAsBC,gBAAtB,EAAwC;AACrDF,EAAAA,IAAI,CAACG,GAAL,CAAS,QAAT,EAAmB;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAEJ;AAAT;AAAX,GAAnB,EAAkDK,IAAlD,CAAuD,UAAAC,QAAQ,EAAI;AAC/DC,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDF,QAAnD;AACA,QAAIG,IAAI,GAAGH,QAAQ,CAACG,IAApB;AACA,QAAIC,GAAG,GAAG;AACNC,MAAAA,KAAK,EAAEF,IAAI,CAACE,KADN;AAENC,MAAAA,IAAI,EAAEH,IAAI,CAACG,IAFL;AAGNC,MAAAA,EAAE,EAAEJ,IAAI,CAACI;AAHH,KAAV;AAKAZ,IAAAA,gBAAgB,CAACS,GAAD,CAAhB;AACH,GATD,EASGI,KATH,CASS,UAAAC,KAAK,EAAI;AACdR,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CO,KAA/C;AACAd,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAZD;AAaH,CAdD;;AAgBA,SACIH,QADJ","sourcesContent":["/**\n * Initialize User by token before init App\n * @param { AxiosStatic } http interface for http request\n * @param { String } token token identification\n * @param { Function } callbackFunction callback function. Called after request to back.\n */\nconst initUser = function(http, token, callbackFunction) {\n    http.get('/login', { headers: { Token: token } }).then(response => {\n        console.log('[initMain.js]: initUser(response): ', response);\n        let data = response.data;\n        let tmp = {\n            login: data.login,\n            role: data.role,\n            id: data.id\n        };\n        callbackFunction(tmp);\n    }).catch(error => {\n        console.log(\"initMain.js]: initUser(error): \", error);\n        callbackFunction(null);\n    });\n}\n\nexport {\n    initUser\n}\n"]}]}