{"remainingRequest":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/babel-loader/lib/index.js!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/views/Information.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/views/Information.vue","mtime":1570804310750},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1570790663275},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/babel-loader/lib/index.js","mtime":1570790663215},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1570790663275},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/vue-loader/lib/index.js","mtime":1570790665183}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import TitlePage from '@/components/titles/TitlePage.vue';\n// import BlocksComponent from '@/components/elements/fields/BlocksComponent.vue';\nimport InformationPanel from '@/components/controlPanels/InformationPanel.vue';\nimport InfoViewSection from '@/components/sections/InfoViewSection.vue';\nexport default {\n  name: 'PageInformation',\n  componentName: 'PageInformation',\n  components: {\n    //     TitlePage,\n    //     BlocksComponent,\n    InfoViewSection: InfoViewSection,\n    InformationPanel: InformationPanel\n  },\n  data: function data() {\n    return {\n      isShowData: false,\n      material: {\n        packageInfo: null,\n        systemInfo: null\n      }\n    };\n  },\n  computed: {\n    getBios: function getBios() {\n      return \"\".concat(this.material.packageInfo.bios.vendor, \"\\n\\u0412\\u0435\\u0440\\u0441\\u0438\\u044F: \").concat(this.material.packageInfo.bios.version, \"\\n \") + this.material.packageInfo.bios.date.replace(/(\\d{2})\\/(\\d{2})\\/(\\d{4})/, \"$3-$2-$1\").toDateMyFormat(0, this);\n    },\n    getRam: function getRam() {\n      return \"\\u0412\\u0441\\u0435\\u0433\\u043E \\u041E\\u041F: \".concat(Math.round(this.material.systemInfo.Totalram / Math.pow(1024, 3)), \" GB\\n\") + \"\\u0414\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0439: \".concat(Math.round(this.material.systemInfo.Freeram / Math.pow(1024, 2)), \" MB\\n\") + \"\\u0412\\u0441\\u0435\\u0433\\u043E \\u043F\\u043E\\u0434\\u043A\\u0430\\u0447\\u043A\\u0438: \".concat(Math.round(this.material.systemInfo.Totalswap / Math.pow(1024, 2)), \" MB\\n\") + \"\\u0414\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u043E \\u043F\\u043E\\u0434\\u0441\\u043A\\u0430\\u0447\\u043A\\u0438: \".concat(Math.round(this.material.systemInfo.Freeswap / Math.pow(1024, 2)), \" MB\\n\");\n    },\n    getNode: function getNode() {\n      return \"\\u0425\\u043E\\u0441\\u0442: \".concat(this.material.packageInfo.node.hostname, \"\\n\") + \"\".concat(this.material.packageInfo.node.machineid, \"\\n\") + \"\\u0427\\u0430\\u0441\\u043E\\u0432\\u043E\\u0439 \\u043F\\u043E\\u044F\\u0441: \".concat(this.material.packageInfo.node.timezone, \"\\n\");\n    },\n    getBoard: function getBoard() {\n      return [[{\n        name: 'assettag',\n        text: this.material.packageInfo.board.assettag\n      }, {\n        name: 'name',\n        text: this.material.packageInfo.board.name\n      }, {\n        name: 'vendor',\n        text: this.material.packageInfo.board.vendor\n      }, {\n        name: 'version',\n        text: this.material.packageInfo.board.version\n      }], [{\n        name: 'assettag',\n        text: this.material.packageInfo.chassis.assettag\n      }, {\n        name: 'type',\n        text: this.material.packageInfo.chassis.type\n      }, {\n        name: 'vendor',\n        text: this.material.packageInfo.chassis.vendor\n      }, {\n        name: 'version',\n        text: this.material.packageInfo.chassis.version\n      }]];\n    },\n    getStorage: function getStorage() {\n      return this.material.packageInfo.storage.map(function (storage) {\n        return Object.keys(storage).map(function (key) {\n          if (key === 'size') {\n            return {\n              name: key,\n              text: storage[key] + \" GB\"\n            };\n          } else {\n            return {\n              name: key,\n              text: storage[key]\n            };\n          }\n        });\n      });\n    },\n    getCPUKernel: function getCPUKernel() {\n      return [[{\n        name: 'model',\n        text: this.material.packageInfo.cpu.model\n      }, {\n        name: 'cpus / cores / threads',\n        text: \"\".concat(this.material.packageInfo.cpu.cpus, \" / \").concat(this.material.packageInfo.cpu.cores, \" / \").concat(this.material.packageInfo.cpu.threads)\n      }, {\n        name: 'vendor',\n        text: this.material.packageInfo.cpu.vendor\n      }], [{\n        name: 'architecture',\n        text: this.material.packageInfo.kernel.architecture\n      }, {\n        name: 'release',\n        text: this.material.packageInfo.kernel.release\n      }, {\n        name: 'version',\n        text: this.material.packageInfo.kernel.version\n      }]];\n    }\n  },\n  created: function created() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n\n      this.$store.state.axios.get('/information').then(function (response) {\n        console.log(\"[Information.vue]: fetchData(response): \", response);\n\n        if (response.status === 200) {\n          _this.material = response.data;\n          _this.isShowData = true;\n        }\n      }).catch(function (error) {\n        console.log(\"[Information.vue]: fetchData(error): \", error);\n      });\n    },\n    handleExport: function handleExport() {\n      if (!!this.material) {\n        var text = JSON.stringify(this.material);\n        var data = new Blob([text], {\n          type: 'application/json'\n        });\n        var target = doucment.createElement(\"a\");\n        var url = window.URL.createObjectURL(data);\n        target.setAttribute(\"href\", url);\n        target.setAttribute(\"download\", \"operations-manager__info-system.json\");\n        target.click();\n        setTimeout(function () {\n          window.URL.revokeObjectURL(url);\n        }, 100);\n      }\n    }\n  }\n};",{"version":3,"sources":["Information.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"pug\">\ndiv#page-information.scroll-containter.overflow-hidden-auto.back_cyan-1(v-if=\"isShowData\")\n    div.width-window.information__content\n        div.panel-container\n            div.information__content-left.inline-block\n                info-view-section.information__section(\n                    :title=\"`${ $t('$sections.board') } / ${ $t('$sections.chassis') }`\"\n                    :data=\"getBoard\"\n                )\n                info-view-section.information__section(\n                    :title=\"`${ $t('$sections.cpu') } / ${ $t('$sections.kernel') } `\"\n                    :data=\"getCPUKernel\"\n                )\n                info-view-section.information__section(\n                    :title=\"`${ $t('$sections.storage') }`\"\n                    :data=\"getStorage\"\n                )\n\n            div.information__content-right.information__panel-control.inline-block\n                information-panel(\n                    :title=\"$t('$controls.information')\"\n                    :name_os=\"material.packageInfo.os.name\"\n                    :architecture=\"material.packageInfo.os.architecture\"\n                    :bios=\"getBios\"\n                    :memoryRam=\"getRam\"\n                    :node=\"getNode\"\n                )\n                span.information__button-text.btn-text(\n                    @click=\"handleExport\"\n                ) {{ $t('$buttons.export') }}\n</template>\n\n<script>\n// import TitlePage from '@/components/titles/TitlePage.vue';\n// import BlocksComponent from '@/components/elements/fields/BlocksComponent.vue';\n\nimport InformationPanel from '@/components/controlPanels/InformationPanel.vue';\nimport InfoViewSection from '@/components/sections/InfoViewSection.vue';\n\nexport default {\n    name: 'PageInformation',\n    componentName: 'PageInformation',\n    components: {\n    //     TitlePage,\n    //     BlocksComponent,\n        InfoViewSection,\n        InformationPanel\n    },\n    data() {\n        return {\n            isShowData: false,\n            material: {\n                packageInfo: null,\n                systemInfo: null\n            }\n        };\n    },\n    computed: {\n        getBios() {\n            return `${ this.material.packageInfo.bios.vendor }\\nВерсия: ${ this.material.packageInfo.bios.version }\\n ` +\n                   this.material.packageInfo.bios.date.replace(/(\\d{2})\\/(\\d{2})\\/(\\d{4})/, \"$3-$2-$1\").toDateMyFormat(0, this);\n        },\n        getRam() {\n            return `Всего ОП: ${ Math.round(this.material.systemInfo.Totalram / (1024 ** 3))  } GB\\n` +\n                   `Доступный: ${ Math.round(this.material.systemInfo.Freeram / (1024 ** 2))  } MB\\n` +\n                   `Всего подкачки: ${ Math.round(this.material.systemInfo.Totalswap / (1024 ** 2))  } MB\\n` +\n                   `Доступно подскачки: ${ Math.round(this.material.systemInfo.Freeswap / (1024 ** 2))  } MB\\n`;\n        },\n        getNode() {\n            return `Хост: ${ this.material.packageInfo.node.hostname }\\n` +\n                   `${ this.material.packageInfo.node.machineid }\\n` +\n                   `Часовой пояс: ${ this.material.packageInfo.node.timezone }\\n`;\n        },\n        getBoard() {\n            return [\n                [\n                    { name: 'assettag', text: this.material.packageInfo.board.assettag },\n                    { name: 'name', text: this.material.packageInfo.board.name },\n                    { name: 'vendor', text: this.material.packageInfo.board.vendor },\n                    { name: 'version', text: this.material.packageInfo.board.version }\n                ],\n                [\n                    { name: 'assettag', text: this.material.packageInfo.chassis.assettag },\n                    { name: 'type', text: this.material.packageInfo.chassis.type },\n                    { name: 'vendor', text: this.material.packageInfo.chassis.vendor },\n                    { name: 'version', text: this.material.packageInfo.chassis.version }\n                ]\n            ];\n        },\n        getStorage() {\n            return this.material.packageInfo.storage.map(storage => {\n                return Object.keys(storage).map(key => {\n                    if (key === 'size') {\n                        return { name: key, text: storage[key] + \" GB\" }\n                    } else {\n                        return { name: key, text: storage[key] }\n                    }\n                })\n            });\n        },\n        getCPUKernel() {\n            return [\n                [\n                    { name: 'model', text: this.material.packageInfo.cpu.model },\n                    { name: 'cpus / cores / threads', text: `${ this.material.packageInfo.cpu.cpus } / ${ this.material.packageInfo.cpu.cores } / ${ this.material.packageInfo.cpu.threads }` },\n                    { name: 'vendor', text: this.material.packageInfo.cpu.vendor },\n                ],\n                [\n                    { name: 'architecture', text: this.material.packageInfo.kernel.architecture },\n                    { name: 'release', text: this.material.packageInfo.kernel.release },\n                    { name: 'version', text: this.material.packageInfo.kernel.version },\n                ]\n            ];\n        }\n    },\n    created() {\n        this.fetchData();\n    },\n    methods: {\n        fetchData() {\n            this.$store.state.axios.get('/information').then(response => {\n                console.log(\"[Information.vue]: fetchData(response): \", response);\n                if (response.status === 200){\n                    this.material = response.data;\n                    this.isShowData = true;\n                }\n            }).catch(error => {\n                console.log(\"[Information.vue]: fetchData(error): \", error);\n            });\n        },\n        handleExport() {\n            if (!!this.material) {\n                let text = JSON.stringify(this.material);\n                let data = new Blob([text], { type : 'application/json' });\n                let target = doucment.createElement(\"a\");\n                let url = window.URL.createObjectURL(data);\n                target.setAttribute(\"href\", url)\n                target.setAttribute(\"download\", \"operations-manager__info-system.json\");\n                target.click();\n                setTimeout(() => {\n                    window.URL.revokeObjectURL(url);\n                }, 100);\n            }\n        }\n    }\n\n}\n</script>\n\n<style lang=\"scss\">\n#page-information {\n    width: 100%;\n    height: calc(100vh - 60px);\n    box-sizing: border-box;\n    padding-bottom: 100px;\n    .information {\n        &__content {\n            width: 100%;\n            &-left {\n                width: 820px;\n            }\n            &-right {\n                width: 400px;\n                margin-left: 20px;\n                margin-top: 20px;\n            }\n        }\n        &__section {\n            margin-top: 20px;\n            width: 100%;\n            background-color: $white;\n        }\n        &__button-text {\n            margin-top: 30px;\n            margin-left: 21px;\n        }\n    }\n}\n</style>"],"sourceRoot":"src/views"}]}