{"remainingRequest":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/thread-loader/dist/cjs.js!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/babel-loader/lib/index.js!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/components/elements/fields/InputImage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/src/components/elements/fields/InputImage.vue","mtime":1570632960898},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/andrey/Документы/Andrgit/Study/Golang/Operations-Manager/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ReloadIcon from 'icons/Reload.svg';\nimport ImageElement from '@/components/elements/ImageElement.vue';\nexport default {\n  name: 'InputImage',\n  componentName: 'InputImage',\n  components: {\n    ImageElement: ImageElement,\n    ReloadIcon: ReloadIcon\n  },\n  props: {\n    value: {\n      type: Object,\n      default: null\n    },\n    label: String,\n    style_component: {\n      type: Object,\n      default: null\n    },\n    isError: {\n      type: Boolean,\n      defaul: false\n    },\n    disabled: {\n      type: Boolean,\n      defaul: false\n    },\n    paramsText: {\n      type: Array,\n      default: null\n    },\n    maxSize: {\n      type: Number,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      isDownload: false,\n      percentLoad: 0,\n      idObject: '',\n      curValue: null\n    };\n  },\n  created: function created() {\n    console.log(\"CREATED INPUT IMAGE\");\n    this.$store.commit('incObjectID');\n    this.idObject = this.$store.getters.getObjectID; // this.updateCounter(this.value);\n  },\n  watch: {\n    value: {\n      handler: function handler(newValue, oldValue) {\n        this.curValue = newValue;\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    isImage: function isImage() {\n      return !!this.curValue || this.isDownload;\n    },\n    nameImage: function nameImage() {\n      var result = null;\n\n      if (!!this.curValue && this.curValue.hasOwnProperty('original') && Object.prototype.toString.call(this.curValue.original) === '[object String]') {\n        var arr = this.curValue.original.split('/');\n        result = arr[arr.length - 1]; // result = this.value.src.replace(/.+\\/(\\w+)$/, \"$1\");\n      }\n\n      return result;\n    },\n    paramsImage: function paramsImage() {\n      var result = [];\n\n      if (!!this.curValue) {\n        if (!!this.curValue.size) {\n          var str = this.$t('$fields.file_size');\n          var sizeKB = this.curValue.size / 1024;\n\n          if (sizeKB < 1024) {\n            result.push(\"\".concat(str, \": \").concat(Math.round(sizeKB), \" \").concat(this.$t('$common.types_calculus.KB')));\n          } else {\n            result.push(\"\".concat(str, \": \").concat(Math.round(sizeKB / 1024), \" \").concat(this.$t('$common.types_calculus.MB')));\n          }\n        }\n\n        if (!!this.curValue.width && !!this.curValue.height) {\n          result.push(\"\".concat(this.$t('$fields.resolution'), \" \").concat(this.curValue.width, \"x\").concat(this.curValue.height, \" \").concat(this.$t('$common.types_calculus.PX')));\n        }\n      }\n\n      return result.length === 0 ? null : result;\n    } //     nameImage(){\n    //         let arr = !!this.value ? this.value.src.split('/') : [,''];\n    //         return arr[arr.length - 1];\n    //     }\n\n  },\n  methods: {\n    uploadImage: function uploadImage(event) {\n      console.log(\"[InputImage.vue]: uploadImage: \", event);\n\n      if (event.target.files.length > 0) {\n        var file = event.target.files[0];\n\n        if (this.maxSize !== null) {\n          if (file.size > this.maxSize) {\n            this.$store.commit('addNotification', {\n              text: \"\".concat(this.$t('$notifications.download_size_exceeds'), \" \").concat(this.maxSize / 1024, \" \").concat(this.$t('$common.types_calculus.KB')),\n              color: 'red'\n            });\n            return;\n          }\n        }\n\n        var formData = new FormData();\n        formData.append(\"image\", file);\n        this.isDownload = true;\n        this.percentLoad = 0;\n        this.curValue = null;\n        this.postData(formData);\n      } //         let formData = new FormData();\n      //         formData.append(\"file\", event.target.files[0]);\n      //         this.isDownload = true;\n      //         this.percentLoad = 0;\n      //         axios.post('graphql/uploadImage', formData, {\n      //             baseURL: process.env.NODE_ENV === 'development' ? 'https://beta.relocus.ru/' : 'https://beta.relocus.ru/',\n      //             headers:{ token: \"f2392211114629558002b9011e4dc057\" }, \n      //             onUploadProgress: this.onUploadProgress \n      //         }).then(response => {\n      //             //console.log(response);\n      //             if (response.status === 200){\n      //                 this.$emit('input', response.data);\n      //                 setTimeout(() => {\n      //                     this.isDownload = false;\n      //                 }, 1000)\n      //             }\n      //         }).catch(error => {\n      //             //console.log(error);\n      //             setTimeout(() => {\n      //                 this.isDownload = false;\n      //             }, 1000)\n      //         });\n\n    },\n    postData: function postData(dataPost) {\n      var _this = this;\n\n      this.$store.state.axios.post('/upload', dataPost, {\n        'baseURL': \"\".concat(this.$store.state.APP_SERVER_ADDRESS, \"/api/v\").concat(this.$store.state.APP_VERSION_API),\n        onUploadProgress: this.onUploadProgress\n      }).then(function (response) {\n        console.log(\"[InputImage.vue]: postData(response) :\", response);\n\n        if (response.status === 200) {\n          _this.$emit('input', response.data);\n\n          setTimeout(function () {\n            _this.isDownload = false;\n          }, 1000);\n        }\n      }).catch(function (error) {\n        console.log(\"[InputImage.vue]: postData(error): \", error);\n        setTimeout(function () {\n          _this.isDownload = false;\n        }, 1000);\n        _this.curValue = _this.value;\n      });\n    },\n    onUploadProgress: function onUploadProgress(progressEvent) {\n      this.percentLoad = progressEvent.loaded / progressEvent.total * 100;\n    }\n  }\n};",{"version":3,"sources":["InputImage.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"pug\">\ndiv.input-image(\n    :class=`[\n        (!!style_component && !!style_component.class) ? style_component.class : '',\n        { 'is-disabled': disabled }\n    ]`\n)\n    span.regular.font-body.input-image__label(\n        v-if=\"!!label\"\n        :class=\"{ 'error': (isError && curValue === null) }\"\n    ) {{ label }}\n    div.input-image__image-block.back_grey2(v-if=\"isImage\").flex\n        div.input-image__image-back(v-if=\"isDownload\")\n            el-progress(\n                v-if=\"isDownload\"\n                type=\"circle\" \n                :percentage=\"percentLoad\"\n                :width=\"30\"\n            )\n        image-element.input-image__image-back(v-else :data=\"curValue\")\n        div.input-image__params-image.break-all-block.mh-60()\n            p.input-image__name-file.regular.font-body.limited-text-line.black(v-if=\"!!nameImage\") {{ nameImage }}\n            template(v-if=\"!!paramsImage\")\n                p.regular.font-desc.limited-text-line.grey50(\n                    v-for=\"(text, index) in paramsImage\"\n                    :key=\"index\"\n                ) {{ text }}\n        label.input-image__icon-update.cursor-pointer.block(:for=\"idObject\" v-if=\"!disabled && !isDownload\")\n            reload-icon\n    div.input-image__button-block.flex.back_grey2(v-else)\n        label.input-image__button.btn-grey.black.block.text-center(:for=\"idObject\") {{ $t('$fields.choose_file') }}\n        div.input-image__params-image.break-all-block.mh-40(v-if=\"!!paramsText\")\n            p.regular.font-desc.limited-text-line.grey50(\n                v-for=\"(text, indexText) in paramsText\"\n                :key=\"indexText\"\n            ) {{ text }}\n    input.input-image__input(\n        ref=\"imageInput\"\n        type=\"file\"\n        accept=\".jpg,.jpeg,.png\"\n        @input=\"uploadImage\"\n        :disabled=\"disabled\"\n        :id=\"idObject\"\n    )\n    //- div.there-image(v-if=\"isImage\")\n    //-     div.image-block(\n    //-         v-if=\"isDownload\"\n    //-     )\n    //-         el-progress(\n    //-             v-if=\"isDownload\"\n    //-             type=\"circle\" \n    //-             :percentage=\"percentLoad\"\n    //-             :width=\"30\"\n    //-         )\n    //-     image-element.image-block(\n    //-         :data=\"value\"\n    //-         v-else\n    //-     )\n            \n    //-     div.param-image\n    //-         p.font-style-regular.font-body.name--(v-if=\"!!value && !!value.src\") {{ nameImage }} \n    //-         p.font-style-regular.font-desc(v-if=\"!!this.value && !!value.size\") File size: {{ value.size }} KB\n    //-         p.font-style-regular.font-desc(v-if=\"!!this.value && !!value.width\") Resulution: {{ value.width }} x {{ value.height }} PX\n    //-     div.icon-update(@click=\"$refs.fileInput.click()\" v-if=\"!options.disabled\")\n    //-         input(ref=\"fileInput\" type=\"file\" accept=\".jpg,.png\" @change=\"uploadImage($event)\")\n    //-         reload-icon\n    //-     div.icon-delete(@click=\"deleteImage\" v-if=\"!options.disabled\")\n    //-         trash-icon\n</template>\n\n<script>\nimport ReloadIcon from 'icons/Reload.svg'\nimport ImageElement from '@/components/elements/ImageElement.vue';\nexport default {\n    name: 'InputImage',\n    componentName: 'InputImage',\n    components: {\n        ImageElement,\n        ReloadIcon,\n    },\n    props: {\n        value: {\n            type: Object,\n            default: null\n        },\n        label: String,\n        style_component: {\n            type: Object,\n            default: null\n        },\n        isError: {\n            type: Boolean,\n            defaul: false\n        },\n        disabled: {\n            type: Boolean,\n            defaul: false\n        },\n        paramsText: {\n            type: Array,\n            default: null\n        },\n        maxSize: {\n            type: Number,\n            default: null\n        }\n    },\n    data() {\n        return {\n            isDownload: false,\n            percentLoad: 0,\n            idObject: '',\n            curValue: null\n        }\n    },\n    created(){\n        console.log(\"CREATED INPUT IMAGE\");\n        this.$store.commit('incObjectID');\n        this.idObject = this.$store.getters.getObjectID;\n        // this.updateCounter(this.value);\n    },\n    watch: {\n        value: {\n            handler(newValue, oldValue) {\n                this.curValue = newValue;\n            },\n            immediate: true\n        }\n    },\n    computed: {\n        isImage(){\n            return !!this.curValue || this.isDownload;\n        },\n        nameImage() {\n            let result = null;\n            if (!!this.curValue &&\n                this.curValue.hasOwnProperty('original') &&\n                Object.prototype.toString.call(this.curValue.original) === '[object String]') {\n                let arr = this.curValue.original.split('/');\n                result = arr[arr.length - 1];\n                // result = this.value.src.replace(/.+\\/(\\w+)$/, \"$1\");\n            }\n            return result;\n        },\n        paramsImage() {\n            let result = [];\n            if (!!this.curValue) {\n                if (!!this.curValue.size) {\n                    let str = this.$t('$fields.file_size');\n                    let sizeKB = this.curValue.size / 1024; \n                    if (sizeKB < 1024) {\n                        result.push(`${ str }: ${ Math.round(sizeKB) } ${ this.$t('$common.types_calculus.KB') }`);\n                    } else {\n                        result.push(`${ str }: ${ Math.round(sizeKB / 1024) } ${ this.$t('$common.types_calculus.MB') }`);\n                    }\n                }\n                if (!!this.curValue.width && !!this.curValue.height) {\n                    result.push(`${ this.$t('$fields.resolution') } ${ this.curValue.width }x${ this.curValue.height } ${ this.$t('$common.types_calculus.PX') }`);\n                }\n            }\n            return result.length === 0 ? null : result;\n        }\n    //     nameImage(){\n    //         let arr = !!this.value ? this.value.src.split('/') : [,''];\n    //         return arr[arr.length - 1];\n    //     }\n    },\n    methods: {\n        uploadImage(event) {\n            console.log(\"[InputImage.vue]: uploadImage: \", event);\n            if (event.target.files.length > 0) {\n                let file = event.target.files[0];\n                if (this.maxSize !== null) {\n                    if (file.size > this.maxSize) {\n                        this.$store.commit('addNotification', { \n                            text: `${ this.$t('$notifications.download_size_exceeds') } ${ this.maxSize / 1024 } ${ this.$t('$common.types_calculus.KB') }`, \n                            color: 'red' \n                        });\n                        return;\n                    }\n                }\n\n                let formData = new FormData();\n                formData.append(\"image\", file);\n                this.isDownload = true;\n                this.percentLoad = 0;\n                this.curValue = null;\n                this.postData(formData);\n            }\n\n    //         let formData = new FormData();\n    //         formData.append(\"file\", event.target.files[0]);\n    //         this.isDownload = true;\n    //         this.percentLoad = 0;\n\n    //         axios.post('graphql/uploadImage', formData, {\n    //             baseURL: process.env.NODE_ENV === 'development' ? 'https://beta.relocus.ru/' : 'https://beta.relocus.ru/',\n    //             headers:{ token: \"f2392211114629558002b9011e4dc057\" }, \n    //             onUploadProgress: this.onUploadProgress \n    //         }).then(response => {\n    //             //console.log(response);\n    //             if (response.status === 200){\n    //                 this.$emit('input', response.data);\n    //                 setTimeout(() => {\n    //                     this.isDownload = false;\n    //                 }, 1000)\n    //             }\n    //         }).catch(error => {\n    //             //console.log(error);\n    //             setTimeout(() => {\n    //                 this.isDownload = false;\n    //             }, 1000)\n    //         });\n\n\n        },\n        postData(dataPost) {\n            this.$store.state.axios.post('/upload', dataPost, { \n                'baseURL': `${ this.$store.state.APP_SERVER_ADDRESS }/api/v${ this.$store.state.APP_VERSION_API }`,\n                onUploadProgress: this.onUploadProgress\n            }).then(response => {\n                console.log(\"[InputImage.vue]: postData(response) :\", response);\n                if (response.status === 200){\n                    this.$emit('input', response.data);\n                    setTimeout(() => {\n                        this.isDownload = false;\n                    }, 1000)\n                }\n            }).catch(error => {\n                console.log(\"[InputImage.vue]: postData(error): \", error);\n                setTimeout(() => {\n                    this.isDownload = false;\n                }, 1000)\n                this.curValue = this.value;\n            })\n        },\n        onUploadProgress(progressEvent){\n            this.percentLoad = (progressEvent.loaded / progressEvent.total) * 100;\n        },\n    }\n}\n</script>\n\n<style lang=\"scss\">\n\n.input-image {\n    &__input {\n        display: none;\n    }\n    &__label {\n        padding: 10px 0;\n    }\n    &__button {\n        width: 170px;\n        height: 40px;\n        box-sizing: border-box;\n        padding: 9px;\n    }\n    &__params-image {\n        flex: 1;\n        margin-left: 20px;\n    }\n    &__image-block {\n        border: 1px solid $grey10;\n        padding: 9px;\n        height: 144px;\n    }\n    &__button-block {\n        border: 1px solid $grey10;\n        padding: 19px;\n        height: 40px;\n    }\n    &__name-file {\n        margin-top: 10px;\n    }\n    &__image-back {\n        width: 120px;\n        height: 144px;\n        position: relative;\n        & .el-progress {\n            position: absolute;\n            top: calc(50% - 15px);\n            left: calc(50% - 15px);\n            .el-progress__text {\n                display: none;\n            }\n            .el-progress-circle__path {\n                stroke-width: 10;\n                stroke: $grey50;\n            }\n        }\n    }\n    &__icon-update {\n        // display: inline-block\n        //     position: relative\n        //     vertical-align: top\n        //     margin: 10px 10px 0 0\n        //     cursor: pointer\n        & .reload-icon-- {\n            stroke: $grey33;\n        }\n        &:hover {\n            & .reload-icon-- {\n                stroke: $grey50;\n            }\n        }\n        &:active {\n            & .reload-icon-- {\n                stroke: $black;\n            }\n        }\n    }\n    &.is-disabled {\n        .input-image__label {\n            color: $grey50;\n        }\n        .input-image__button {\n            cursor: not-allowed;\n            border: 1px solid $grey10;\n            color: $grey50;\n            &:hover, &:active {\n                background-color: $grey2;\n                border: 1px solid $grey10;\n                color: $grey50;\n            }\n        }\n    }\n}\n// .disabled\n//     .span--\n//         color: $grey50\n//     .add-image-button\n//         cursor: not-allowed\n//         border: 1px solid $grey10\n//         color: $grey50\n//         &:hover, &:active\n//             background-color: $grey2\n//             border: 1px solid $grey10\n//             color: $grey50 */\n\n\n</style>"],"sourceRoot":"src/components/elements/fields"}]}